{"version":3,"sources":["components/Form/styles.module.scss","styles.module.scss","components/PieChart/Sector.js","components/PieChart/Circle.js","components/PieChart/Sectors.js","components/PieChart/PieChart.js","components/PieChart/index.js","components/Form/index.js","App.js","index.js"],"names":["module","exports","Sector","props","fill","strokeColor","strokeLinejoin","strokeWidth","onTouchStart","onTouchEnd","onMouseEnter","onMouseLeave","path","title","href","transitionDuration","transitionTimingFunction","content","d","stroke","style","transitionProperty","defaultProps","Circle","center","color","radius","cx","cy","rx","ry","Sectors","data","onSectorHover","expandSize","startAngle","angleMargin","total","reduce","prev","current","value","anglesMap","map","i","angleStart","angleEnd","isLarge","angle","expanded","angleMid","r2","x1","Math","cos","PI","y1","sin","x2","y2","a","slice","b","xMid","yMid","xEnd","xText","length","sectorLabelLinePoints","key","e","points","x","y","fontSize","PieChart","React","Component","state","expandedIndex","handleSectorHover","index","this","setState","renderSingleData","dataItem","renderMultipleData","render","viewBoxSize","offset","dataWithValue","filter","viewBox","transform","shrinkOnTouchEnd","Form","handleChange","handleAddDataRow","handleRemoveDataRaw","className","styles","form","formGroup","name","inputControl","placeholder","onChange","onClick","class","footer","addBtn","aria-hidden","randomProperty","obj","keys","Object","random","palette","chartData","App","useState","dataList","setDataList","useEffect","row","formCol","target","list","Number","splice","chartCol","el","console","log","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.af0cdf8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartDataForm\":\"styles_chartDataForm__RGzFw\",\"formGroup\":\"styles_formGroup__1YdpH\",\"inputControl\":\"styles_inputControl__1qruj\",\"footer\":\"styles_footer__mGNZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"styles_row__2vbGa\",\"formCol\":\"styles_formCol__2SqaF\",\"chartCol\":\"styles_chartCol__27LZW\",\"chartLabel\":\"styles_chartLabel__1UKOl\",\"nav\":\"styles_nav__1QreO\",\"nav-tabs\":\"styles_nav-tabs__1rfcT\"};","import PropTypes from \"prop-types\";\nimport React from \"react\";\n// Sector WIN. FATALITY\nconst Sector = (props) => {\n  let result;\n  const {\n    fill,\n    strokeColor,\n    strokeLinejoin,\n    strokeWidth,\n    onTouchStart,\n    onTouchEnd,\n    onMouseEnter,\n    onMouseLeave,\n    path,\n    title,\n    href,\n    transitionDuration,\n    transitionTimingFunction\n  } = props;\n\n  const content = (\n    <path\n      d={path}\n      fill={fill}\n      stroke={strokeColor}\n      strokeWidth={strokeWidth}\n      strokeLinejoin={strokeLinejoin}\n      onTouchStart={onTouchStart}\n      onTouchEnd={onTouchEnd}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      style={{\n        transitionProperty: \"all\",\n        transitionTimingFunction: transitionTimingFunction,\n        transitionDuration: transitionDuration\n      }}\n    >\n      {title && <title>{title}</title>}\n    </path>\n  );\n\n  if (href) {\n    result = <a href={href}>{content}</a>;\n  } else {\n    result = content;\n  }\n  return result;\n};\n\nSector.propTypes = {\n  fill: PropTypes.string,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  path: PropTypes.string.isRequired,\n  strokeColor: PropTypes.string,\n  strokeLinejoin: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  title: PropTypes.string,\n  href: PropTypes.string,\n  transitionDuration: PropTypes.string,\n  transitionTimingFunction: PropTypes.string\n};\n\nSector.defaultProps = {\n  strokeColor: \"#fff\",\n  strokeWidth: 1,\n  strokeLinejoin: \"round\",\n  title: null,\n  href: null,\n  transitionDuration: \"0.3s\",\n  transitionTimingFunction: \"ease-in-out\"\n};\n\nexport default Sector;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Sector from \"./Sector\";\n\nconst Circle = ({\n  center,\n  color,\n  onMouseEnter,\n  onMouseLeave,\n  onTouchEnd,\n  onTouchStart,\n  radius,\n  strokeColor,\n  strokeWidth,\n  title\n}) => (\n  <ellipse\n    cx={center}\n    cy={center}\n    fill={color}\n    onMouseEnter={onMouseEnter}\n    onMouseLeave={onMouseLeave}\n    onTouchEnd={onTouchEnd}\n    onTouchStart={onTouchStart}\n    rx={radius}\n    ry={radius}\n    stroke={strokeColor}\n    strokeWidth={strokeWidth}\n  >\n    {title && <title>{title}</title>}\n  </ellipse>\n);\n\nCircle.propTypes = {\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onTouchEnd: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  center: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  radius: PropTypes.number.isRequired,\n  strokeColor: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  title: PropTypes.string\n};\n\nCircle.defaultProps = {\n  strokeColor: Sector.defaultProps.strokeColor,\n  strokeWidth: Sector.defaultProps.strokeWidth\n};\n\nexport default Circle;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport Sector from \"./Sector\";\n\nconst Sectors = ({\n  center,\n  data,\n  onSectorHover,\n  expandSize,\n  strokeWidth,\n  strokeColor,\n  startAngle,\n  angleMargin,\n  ...props\n}) => {\n  const total = data.reduce((prev, current) => current.value + prev, 0);\n  const anglesMap = data.map((d, i) => {\n    return (360 * d.value) / total;\n  });\n  let angleStart = startAngle;\n  let angleEnd = startAngle;\n  return total > 0 ? (\n    <g>\n      {data.map((d, i) => {\n        const isLarge = d.value / total > 0.5;\n        const angle = (360 * d.value) / total;\n        const radius =\n          (center + (d.expanded ? expandSize : 0) - strokeWidth) * 0.5;\n\n        angleStart = angleEnd;\n        angleMargin = angleMargin > angle ? angle : angleMargin;\n        angleEnd = angleStart + angle - angleMargin;\n        const angleMid = (angleEnd - angleStart) / 2;\n        const r2 = radius * 1.2;\n        const x1 = center + radius * Math.cos((Math.PI * angleStart) / 180);\n        const y1 = center + radius * Math.sin((Math.PI * angleStart) / 180);\n        const x2 = center + radius * Math.cos((Math.PI * angleEnd) / 180);\n        const y2 = center + radius * Math.sin((Math.PI * angleEnd) / 180);\n        const path = `\n        M${center},${center}\n        L${x1},${y1}\n        A${radius},${radius}\n        0 ${isLarge ? 1 : 0},1\n        ${x2},${y2}\n        z\n      `;\n\n        const a = angleMid + anglesMap.slice(0, i).reduce((a, b) => a + b, 0);\n        const xMid = center + r2 * Math.cos((Math.PI * a) / 180);\n        const yMid = center + r2 * Math.sin((Math.PI * a) / 180);\n        const xEnd = xMid > center ? xMid + 5 : xMid - 5;\n        const xText = xMid < center ? xEnd - d.title.length * 3 : xEnd;\n        const sectorLabelLinePoints = `\n        ${center},${center} \n        ${xMid} ${yMid} \n        ${xEnd} ${yMid}\n        `;\n\n        angleEnd += angleMargin;\n        return (\n          <g key={\"sector\" + i}>\n            <Sector\n              fill={d.color}\n              path={path}\n              href={d.href}\n              strokeColor={strokeColor}\n              strokeWidth={strokeWidth}\n              total={total}\n              onMouseEnter={(e) => onSectorHover(d, i, e)}\n              onMouseLeave={(e) => onSectorHover(null, null, e)}\n              onTouchEnd={(e) => onSectorHover(null, null, e)}\n              onTouchStart={(e) => onSectorHover(d, i, e)}\n              {...props}\n              {...d}\n            />\n            <polyline\n              points={sectorLabelLinePoints}\n              fill=\"none\"\n              stroke={d.color}\n              strokeWidth={1}\n            />\n            <text x={xText} y={yMid + 2} fontSize={\"0.4em\"}>\n              {d.title}\n            </text>\n          </g>\n        );\n      })}\n    </g>\n  ) : null;\n};\n\nSectors.propTypes = {\n  center: PropTypes.number.isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string,\n      title: PropTypes.string,\n      value: PropTypes.number.isRequired\n    })\n  ).isRequired,\n  onSectorHover: PropTypes.func,\n  expandSize: PropTypes.number,\n  strokeColor: Sector.propTypes.strokeColor,\n  strokeWidth: Sector.propTypes.strokeWidth,\n  startAngle: PropTypes.number,\n  angleMargin: PropTypes.number\n};\n\nSectors.defaultProps = {\n  expandSize: 10\n};\n\nexport default Sectors;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Circle from \"./Circle\";\nimport Sector from \"./Sector\";\nimport Sectors from \"./Sectors\";\n\nclass PieChart extends React.Component {\n  state = {\n    expandedIndex: null\n  };\n\n  handleSectorHover = (data, index, e) => {\n    const { onSectorHover } = this.props;\n    this.setState({ expandedIndex: index });\n    onSectorHover(data, index, e);\n  };\n\n  renderSingleData(dataItem, center) {\n    const { expandedIndex } = this.state;\n    const { expandSize } = this.props;\n    return (\n      <Circle\n        center={center}\n        radius={\n          center + (dataItem.expanded || expandedIndex === 0 ? expandSize : 0)\n        }\n        onMouseEnter={(e) => this.handleSectorHover(dataItem, 0, e)}\n        onMouseLeave={(e) => this.handleSectorHover(null, null, e)}\n        onTouchEnd={(e) => this.handleSectorHover(null, null, e)}\n        onTouchStart={(e) => this.handleSectorHover(dataItem, 0, e)}\n        {...dataItem}\n      />\n    );\n  }\n\n  renderMultipleData(center) {\n    const { expandedIndex } = this.state;\n    const { data, ...props } = this.props;\n    return (\n      <Sectors\n        center={center}\n        data={data.map((d, i) => ({ ...d, expanded: i === expandedIndex }))}\n        {...props}\n        onSectorHover={this.handleSectorHover}\n      />\n    );\n  }\n\n  render() {\n    const { data, expandSize, viewBoxSize } = this.props;\n    const center = viewBoxSize / 2;\n    const offset = expandSize;\n    const dataWithValue = data.filter((d) => d.value > 0);\n    return dataWithValue && dataWithValue.length > 0 ? (\n      <svg\n        viewBox={`0 0 ${viewBoxSize + offset + 2} ${viewBoxSize + offset + 2}`}\n      >\n        <g transform={`translate(${offset}, ${offset})`}>\n          {dataWithValue.length === 1\n            ? this.renderSingleData(dataWithValue[0], center)\n            : this.renderMultipleData(center)}\n        </g>\n      </svg>\n    ) : null;\n  }\n}\n\nPieChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string,\n      title: PropTypes.string,\n      value: PropTypes.number.isRequired,\n      href: PropTypes.string\n    })\n  ).isRequired,\n  expandSize: PropTypes.number,\n  expandedIndex: PropTypes.number,\n  onSectorHover: PropTypes.func,\n  strokeColor: Sector.propTypes.strokeColor,\n  strokeLinejoin: Sector.propTypes.strokeLinejoin,\n  strokeWidth: Sector.propTypes.strokeWidth,\n  startAngle: PropTypes.number,\n  angleMargin: PropTypes.number,\n  viewBoxSize: PropTypes.number,\n  transitionDuration: Sector.propTypes.transitionDuration,\n  transitionTimingFunction: Sector.propTypes.transitionTimingFunction\n};\n\nPieChart.defaultProps = {\n  data: [],\n  expandSize: Sectors.defaultProps.expandSize,\n  expandedIndex: -1,\n  onSectorHover: null,\n  shrinkOnTouchEnd: false,\n  strokeColor: Sector.defaultProps.strokeColor,\n  strokeLinejoin: Sector.defaultProps.strokeLinejoin,\n  strokeWidth: Sector.defaultProps.strokeWidth,\n  startAngle: 0,\n  angleMargin: 0,\n  viewBoxSize: 200,\n  transitionDuration: Sector.defaultProps.transitionDuration,\n  transitionTimingFunction: Sector.defaultProps.transitionTimingFunction\n};\n\nexport default PieChart;\n","import PieChart from \"./PieChart\";\n\nexport default PieChart;\n","import React from \"react\";\nimport styles from \"./styles.module.scss\";\n\nconst Form = (props) => {\n  const { data, handleChange, handleAddDataRow, handleRemoveDataRaw } = props;\n\n  return (\n    <>\n      <h3>Chart Data</h3>\n      <div className={styles.form}>\n        {data.map((x, i) => {\n          return (\n            <div key={i}>\n              <div className={styles.formGroup}>\n                <input\n                  name=\"title\"\n                  className={styles.inputControl}\n                  placeholder=\"Title\"\n                  value={x.title}\n                  onChange={(e) => handleChange(e, i)}\n                />\n                <input\n                  name=\"value\"\n                  className={styles.inputControl}\n                  placeholder=\"Value\"\n                  value={x.value}\n                  onChange={(e) => handleChange(e, i)}\n                />\n                {data.length !== 1 && (\n                  <button\n                    className={styles.inputControl}\n                    onClick={() => handleRemoveDataRaw(i)}\n                  >\n                    <i class=\"fa fa-trash\"></i>\n                  </button>\n                )}\n              </div>\n            </div>\n          );\n        })}\n        <div className={styles.footer}>\n          <button className={styles.addBtn} onClick={handleAddDataRow}>\n          <i class=\"fa fa-plus-square\" aria-hidden=\"true\"></i> Add\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport PieChat from \"./components/PieChart\";\nimport Form from \"./components/Form\";\nimport styles from \"./styles.module.scss\";\n\nimport palette from \"./colors\";\n\nfunction randomProperty(obj) {\n  var keys = Object.keys(obj);\n  return obj[keys[(keys.length * Math.random()) << 0]];\n}\n\nconst color = () => randomProperty(randomProperty(palette));\n\nconst chartData = [\n  {\n    title: \"Data 1\",\n    value: 10,\n    color: color()\n  },\n  {\n    title: \"Data 2\",\n    value: 20,\n    color: color()\n  },\n  {\n    title: \"Data 3\",\n    value: 50,\n    color: color()\n  },\n  {\n    title: \"Data 4\",\n    value: 20,\n    color: color()\n  }\n];\n\nexport default function App() {\n  const [dataList, setDataList] = useState([]);\n\n  useEffect(() => {\n    setDataList(chartData);\n  }, []);\n\n  const handleFormInputChange = (e, index) => {\n    const { name, value } = e.target;\n    const list = [...dataList];\n    switch (name) {\n      case \"title\":\n        list[index][name] = value;\n        break;\n      case \"value\":\n        list[index][name] = Number(value);\n        break;\n      default:\n        list[index][name] = value;\n    }\n    setDataList(list);\n  };\n\n  const handleFormAddItem = () => {\n    setDataList([...dataList, { title: \"\", value: \"\", color: color() }]);\n  };\n\n  const handleFormRemoveItem = (index) => {\n    const list = [...dataList];\n    list.splice(index, 1);\n    setDataList(list);\n  };\n\n  return (\n    <>\n      <div className={styles.row}>\n        <div className={styles.formCol}>\n          <Form\n            data={dataList}\n            handleChange={handleFormInputChange}\n            handleAddDataRow={handleFormAddItem}\n            handleRemoveDataRaw={handleFormRemoveItem}\n          />\n        </div>\n        <div className={styles.chartCol}>\n          <PieChat\n            data={dataList.filter((el) => el.title !== \"\" && el.value !== \"\")}\n            onSectorHover={(e) => {\n              console.log(e);\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}